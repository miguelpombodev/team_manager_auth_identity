version: "3.4"

services:
  database:
    image: postgres
    platform: linux/amd64
    ports:
      - '5432:5432'
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d TeamManager -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    container_name: team_manager_database
    networks:
      - tm_net
    environment:
      - POSTGRES_PASSWORD=docker123
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis
    platform: linux/amd64
    ports:
      - '6379:6379'
    restart: always
    container_name: team_manager_redis
    networks:
      - tm_net
    command: redis-server --requirepass TeamManagerRedis123!
  rabbitmq:
    image: rabbitmq:3.12-management
    platform: linux/amd64
    container_name: team_manager_rabbitmq_broker_management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - tm_net
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
  email_sender:
    image: wallghost/email-sender-subscriber:latest
    container_name: team_manager_email_sender
    networks:
      - tm_net
    restart: on-failure
    depends_on:
      - rabbitmq
  strapi:
    image: strapi/strapi
    container_name: team_manager_strapi_crm
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: "postgres"
      DATABASE_NAME: "TeamManagerStrapiDB"
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: "docker123"
    networks:
      - tm_net
    ports:
      - "1337:1337"
    depends_on:
      - database

networks:
  tm_net:
    driver: bridge

volumes:
  pgdata:
  rabbitmq_data:
    